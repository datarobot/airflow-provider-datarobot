pipeline:
  name: ci-checks
  identifier: cichecks
  projectIdentifier: airflowproviderdatarobot
  orgIdentifier: AGENTS
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.svc_harness_git1
        repoName: airflow-provider-datarobot
        build: <+input>
  stages:
    - parallel:
        - stage:
            name: CopyrightCheck
            identifier: CopyrightCheck
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: account.cigeneral
                  namespace: harness-delegate-ng
                  automountServiceAccountToken: true
                  nodeSelector: {}
                  os: Linux
              execution:
                steps:
                  - step:
                      type: Run
                      name: Copyright Check
                      identifier: Copyright_Check
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: apache/skywalking-eyes:0.4.0
                        shell: Sh
                        command: /bin/license-eye -c .licenserc.yaml header check
            when:
              pipelineStatus: Success
        - stage:
            name: Lint and MyPy
            identifier: lint
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: account.cigeneral
                  namespace: harness-delegate-ng
                  automountServiceAccountToken: true
                  nodeSelector: {}
                  os: Linux
              execution:
                steps:
                  - parallel:
                      - step:
                          type: Run
                          name: lint check step
                          identifier: run_lint_and_mypy
                          spec:
                            connectorRef: account.dockerhub_datarobot_read
                            image: python:3.12
                            shell: Bash
                            command: |-
                              set -exuo pipefail
                              make req-dev
                              make lint
                      - step:
                          type: Run
                          name: format check step
                          identifier: format_lint
                          spec:
                            connectorRef: account.dockerhub_datarobot_read
                            image: python:3.12
                            shell: Bash
                            command: |-
                              set -exuo pipefail
                              make req-dev
                              make format-no-fix
                      - step:
                          type: Run
                          name: mypy check step
                          identifier: mypy
                          spec:
                            connectorRef: account.dockerhub_datarobot_read
                            image: python:3.12
                            shell: Bash
                            command: |-
                              set -exuo pipefail
                              make req-dev
                              make typecheck
        - stage:
            name: Unit tests
            identifier: test_unit
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: account.cigeneral
                  namespace: harness-delegate-ng
                  automountServiceAccountToken: true
                  nodeSelector: {}
                  os: Linux
              execution:
                steps:
                  - step:
                      type: Run
                      name: run unit tests
                      identifier: run_unit_tests
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: python:<+matrix.python_version>
                        shell: Bash
                        command: |-
                          set -exuo pipefail
                          make req-dev
                          airflow db init
                          airflow db check
                          make test-harness
                        reports:
                          type: JUnit
                          spec:
                            paths:
                              - /harness/unit_test_report.xml
                        resources:
                          limits:
                            memory: 1Gi
                            cpu: "1.5"
                      strategy:
                        matrix:
                          python_version:
                            - "3.9"
                            - "3.10"
                            - "3.11"
                            - "3.12"
                          nodeName: <+matrix.python_version>
        - stage:
            name: Build docs tests
            identifier: test_build_docs
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: account.cigeneral
                  namespace: harness-delegate-ng
                  automountServiceAccountToken: true
                  nodeSelector: {}
                  os: Linux
              execution:
                steps:
                  - step:
                      type: Run
                      name: run build docs test
                      identifier: run_build_docs_tests
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: python:3.12
                        shell: Bash
                        command: |-
                          set -exuo pipefail
                          make req-dev-docs
                          make test-docs-harness
                        resources:
                          limits:
                            memory: 1Gi
                            cpu: "1.5"
        - stage:
            name: Test dev environment
            identifier: test_dev_environment
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              caching:
                enabled: true
              buildIntelligence:
                enabled: true
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: account.cigeneral
                  namespace: harness-delegate-ng
                  automountServiceAccountToken: true
                  nodeSelector: {}
                  os: Linux
              execution:
                steps:
                  - step:
                      type: Run
                      name: Run test dev environment
                      identifier: run_test_dev_environment
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: docker
                        shell: Sh
                        command: |-
                          set -exuo pipefail
                          ## Setup container environment
                          apk update
                          apk add sudo make bash curl
                          apk add python3 py3-pip py3-build
                          # Run testing
                          make test-development-container
