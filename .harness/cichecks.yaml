pipeline:
  name: ci-checks
  identifier: cichecks
  projectIdentifier: airflowproviderdatarobot
  orgIdentifier: AGENTS
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.svc_harness_git1
        repoName: airflow-provider-datarobot
        build: <+input>
  stages:
    - parallel:
        - stage:
            name: Lint and MyPy
            identifier: lint
            description: ""
            type: CI
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: account.cigeneral
                  namespace: harness-delegate-ng
                  automountServiceAccountToken: true
                  nodeSelector: {}
                  os: Linux
              cloneCodebase: true
              execution:
                steps:
                  - parallel:
                      - step:
                          type: Run
                          name: lint check step
                          identifier: run_lint
                          spec:
                            connectorRef: account.dockerhub_datarobot_read
                            image: python:3.12
                            shell: Bash
                            command: |-
                              set -exuo pipefail
                              pip install -U pip
                              pip install -r requirements.txt
                              make lint
                      - step:
                          type: Run
                          name: format check step
                          identifier: format_lint
                          spec:
                            connectorRef: account.dockerhub_datarobot_read
                            image: python:3.12
                            shell: Bash
                            command: |-
                              set -exuo pipefail
                              pip install -U pip
                              pip install -r requirements.txt
                              make format-no-fix
                      - step:
                          type: Run
                          name: mypy check step
                          identifier: mypy
                          spec:
                            connectorRef: account.dockerhub_datarobot_read
                            image: python:3.12
                            shell: Bash
                            command: |-
                              set -exuo pipefail
                              pip install -U pip
                              pip install -r requirements.txt
                              make typecheck
        - stage:
            name: Unit tests
            identifier: test_unit
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: account.cigeneral
                  namespace: harness-delegate-ng
                  automountServiceAccountToken: true
                  nodeSelector: {}
                  os: Linux
              execution:
                steps:
                  - step:
                      type: Run
                      name: run unit tests
                      identifier: run_unit_tests
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: python:<+matrix.python_version>
                        shell: Bash
                        command: |-
                          set -exuo pipefail
                          make req-dev
                          airflow db init
                          airflow db check
                          make test-harness
                        reports:
                          type: JUnit
                          spec:
                            paths:
                              - /harness/unit_test_report.xml
                        resources:
                          limits:
                            memory: 1Gi
                            cpu: "1.5"
                      strategy:
                        matrix:
                          python_version:
                            - "3.9"
                            - "3.10"
                            - "3.11"
                            - "3.12"
                          nodeName: <+matrix.python_version>
        - stage:
            name: Docs tests
            identifier: test_docs
            description: ""
            type: CI
            spec:
              cloneCodebase: true
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: account.cigeneral
                  namespace: harness-delegate-ng
                  automountServiceAccountToken: true
                  nodeSelector: {}
                  os: Linux
              execution:
                steps:
                  - step:
                      type: Run
                      name: run build docs test
                      identifier: run_build_docs_tests
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: python:<+matrix.python_version>
                        shell: Bash
                        command: |-
                          set -exuo pipefail
                          make req-dev
                          airflow db init
                          airflow db check
                          make test-docs-harness
                        reports:
                          type: JUnit
                          spec:
                            paths:
                              - /harness/unit_test_report.xml
                        resources:
                          limits:
                            memory: 1Gi
                            cpu: "1.5"
                      strategy:
                        matrix:
                          python_version:
                            - "3.12"
                          nodeName: <+matrix.python_version>
